generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model UserToken {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  token         String   @unique
  refresh_token String?
  expires_at    DateTime
  user_id       String   @db.ObjectId

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user_tokens2")
}

model File {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  url       String @unique
  type      String
  size      Int
  mime_type String
  metadata  Json?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("files2")
}

model Interaction {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  blocks        Json[]
  data          Json[]
  events        Json[]
  metadata      Json?
  last_block_id String?
  depth         Int     @default(0)
  locations     Json[]  @default([])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  template_id    String @db.ObjectId
  publication_id String @db.ObjectId
  page_id        String @db.ObjectId
  user_id        String @db.ObjectId

  Publication Publication @relation(fields: [publication_id], references: [id])
  Page        Page        @relation(fields: [page_id], references: [id])
  Template    Template    @relation(fields: [template_id], references: [id])
  User        User        @relation(fields: [user_id], references: [id])

  @@map("interactions2")
}

model Page {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  description      String?
  url              String  @unique
  avatar_url       String?
  background_url   String?
  is_stripe_active Boolean @default(false)
  stripe_id        String?
  trackers         Json[]  @default([])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  workspace_id String @db.ObjectId

  templates   Template[]
  Publication Publication[]
  Interaction Interaction[]
  Workspace   Workspace?    @relation(fields: [workspace_id], references: [id])

  @@map("pages2")
}

model Publication {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  blocks       Json[]
  published_at DateTime?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  template_id String? @db.ObjectId
  page_id     String  @db.ObjectId

  Interaction Interaction[]
  Template    Template?     @relation(fields: [template_id], references: [id])
  Page        Page?         @relation(fields: [page_id], references: [id])

  @@map("publications2")
}

model Template {
  id                         String @id @default(auto()) @map("_id") @db.ObjectId
  name                       String
  url                        String @unique
  shortcut_image             String
  shortcut_size              String @default("small")
  trackers                   Json[] @default([])
  number_of_new_interactions Int    @default(0)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  page_id                String  @db.ObjectId
  current_publication_id String? @db.ObjectId

  Page         Page          @relation(fields: [page_id], references: [id])
  Publications Publication[]
  Interactions Interaction[]

  @@map("templates2")
}

model User {
  id                            String    @id @default(auto()) @map("_id") @db.ObjectId
  email                         String?   @unique
  password                      String?
  type                          String    @default("visitant")
  email_verified                Boolean   @default(false)
  password_reset_token_attempts Int       @default(0)
  name                          String?
  avatar_url                    String?
  stripe_customer_id            String?
  confirmation_token            String?
  last_login                    DateTime?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Workspace   Workspace[]
  Interaction Interaction[]

  @@map("users2")
}

model Workspace {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  avatar_url String?
  services   Json[]  @default([])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_id String @db.ObjectId

  User User   @relation(fields: [user_id], references: [id])
  Page Page[]

  @@map("workspaces2")
}
