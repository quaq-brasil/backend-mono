generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Interaction {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  blocks         Json[]
  data           Json[]
  events         Json[]
  metadata       Json?
  last_block_id  String?
  depth          Int         @default(0)
  locations      Json[]
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  template_id    String      @db.ObjectId
  Template       Template    @relation(fields: [template_id], references: [id])
  publication_id String      @db.ObjectId
  Publication    Publication @relation(fields: [publication_id], references: [id])
  page_id        String      @db.ObjectId
  Page           Page        @relation(fields: [page_id], references: [id])
  user_id        String      @db.ObjectId
  User           User        @relation(fields: [user_id], references: [id])

  @@map("interactions2")
}

model Publication {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  blocks       Json
  template_id  String?       @db.ObjectId
  Template     Template?     @relation(fields: [template_id], references: [id])
  page_id      String?       @db.ObjectId
  Page         Page?         @relation(fields: [page_id], references: [id])
  published_at DateTime?
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  Interaction  Interaction[]

  @@map("publications2")
}

model Template {
  id                         String        @id @default(auto()) @map("_id") @db.ObjectId
  name                       String
  url                        String
  shortcut_image             String
  shortcut_size              String
  current_publication_id     String        @db.ObjectId
  number_of_new_interactions Int           @default(0)
  page_id                    String        @db.ObjectId
  facebook_pixel_id          String?
  Page                       Page          @relation(fields: [page_id], references: [id])
  created_at                 DateTime      @default(now())
  updated_at                 DateTime      @updatedAt
  Publications               Publication[]
  Interactions               Interaction[]

  @@map("templates2")
}

model User {
  id                             String      @id @default(auto()) @map("_id") @db.ObjectId
  email                          String?     @unique
  password                       String?
  type                           String      @default("visitant")
  email_verified                 Boolean     @default(false)
  password_reset_token_attempts  Int         @default(0)
  name                           String?
  avatar_url                     String?
  stripe_customer_id             String?
  email_activation_token         String?
  email_activation_token_expires DateTime?
  password_reset_token           String?
  password_reset_token_expires   DateTime?
  last_login                     DateTime?
  tokens                         UserToken[]

  Workspace    Workspace?    @relation(fields: [workspace_id], references: [id])
  workspace_id String?       @db.ObjectId
  Interaction  Interaction[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt

  @@map("users2")
}

model UserToken {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  token         String   @unique
  refresh_token String?
  expires_at    DateTime
  User          User?    @relation(fields: [user_id], references: [id])
  user_id       String?  @db.ObjectId
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@map("user_tokens2")
}

model Page {
  id                  String     @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  url                 String     @unique
  avatar_url          String?
  background_url      String?
  is_stripe_active    Boolean    @default(false)
  stripe_id           String?
  facebook_pixel_id   String?
  google_analytics_id String?
  templates           Template[]

  Interaction Interaction[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  Publication Publication[]

  Workspace    Workspace? @relation(fields: [workspace_id], references: [id])
  workspace_id String?    @db.ObjectId

  @@map("pages2")
}

model Workspace {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  avatar_url String?
  services   Json[]
  users      User[]
  Page       Page[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("workspaces2")
}

model File {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  url        String   @unique
  type       String
  size       Int
  mime_type  String
  metadata   Json?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("files2")
}
